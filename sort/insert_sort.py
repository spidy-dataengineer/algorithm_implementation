"""
삽입 정렬(Insertion Sort)은 배열을 정렬하는 간단하면서도 효율적인 알고리즘 중 하나입니다.
이 정렬 방식은 각 반복에서 하나의 데이터를 적절한 위치에 삽입함으로써 작업을 수행합니다.
삽입 정렬은 이미 정렬된 부분과 정렬되지 않은 부분으로 배열을 나누고,
정렬되지 않은 부분의 각 요소를 차례대로 이미 정렬된 부분의 적절한 위치에 삽입하는 방식으로 작동

1. 배열의 두 번째 요소부터 시작하여, 해당 요소가 삽입될 적절한 위치를 이미 정렬된 배열 부분에서 찾습니다.
2. 선택된 요소를 그보다 큰 모든 요소 뒤로 이동시킨 후, 적절한 위치에 삽입합니다.
3. 배열의 모든 요소가 이 과정을 거쳐 적절히 정렬될 때까지 이 과정을 반복합니다.

* 공간 복잡도: O(1)의 추가 메모리만을 사용합니다.
* 시간 복잡도: 최선의 경우 O(n), 평균 및 최악의 경우 O(n^2)입니다.
배열이 이미 정렬되어 있으면 빠르게 작동하지만, 역순으로 정렬되어 있거나 무작위일 때는 느립니다.
"""

def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i-1
        while j >= 0 and key < arr[j]: # 첫번째 인덱스까지만 검사 + 검사대상이 앞의 숫자보다 작은 경우
            arr[j + 1] = arr[j] # key의 인덱스에 해당하는 곳에 큰 숫자를 삽입
            j -= 1 # i 인덱스 바로 이전부터해서 첫번째 인덱스까지 검사
        arr[j + 1] = key # 검사 대상은 앞으로 이동

# 예시 배열
arr = [12, 11, 13, 5, 6]
insertion_sort(arr)
print("정렬된 배열:", arr)